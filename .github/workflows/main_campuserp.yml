name: Build and Deploy Node.js App to Azure Web App - CampusERP
permissions:
  id-token: write
  contents: read
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    environment: production
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g prisma

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build TypeScript
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Prepare Deployment Package
        shell: powershell
        run: |
          # Create clean deployment directory
          Remove-Item -Path deploy -Recurse -Force -ErrorAction SilentlyContinue
          New-Item -Path deploy -ItemType Directory

          # Copy build files
          Copy-Item -Path "dist" -Destination "deploy" -Recurse
          Copy-Item -Path "package.json" -Destination "deploy"
          Copy-Item -Path "package-lock.json" -Destination "deploy"
          Copy-Item -Path "web.config" -Destination "deploy"
          Copy-Item -Path "prisma" -Destination "deploy" -Recurse

          # Install production dependencies
          Set-Location deploy
          npm install --production
          npm install @prisma/client
          Remove-Item package-lock.json -Force -ErrorAction SilentlyContinue

          # Create iisnode logs directory
          New-Item -Path "iisnode" -ItemType Directory

          # Set IIS directory permissions
          icacls . /grant "BUILTIN\IIS_IUSRS:(OI)(CI)(F)"

          # Create deployment package
          Compress-Archive -Path * -DestinationPath ..\release.zip -Force
          Set-Location ..

      - name: Upload Artifact for Deployment
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: "production"
      url: https://campuserp.azurewebsites.net
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure Azure Web App
        shell: powershell
        run: |
          # Configure app settings
          az webapp config set --name CampusERP --resource-group CampusERP_group --windows-fx-version "NODE|18-LTS" --startup-file "dist/index.js"

          az webapp config appsettings set --name CampusERP --resource-group CampusERP_group --settings `
          SCM_DO_BUILD_DURING_DEPLOYMENT=false `
          WEBSITE_RUN_FROM_PACKAGE=0 `
          WEBSITE_NODE_DEFAULT_VERSION="~18" `
          NODE_ENV=production `
          DATABASE_URL="${{ secrets.DATABASE_URL }}" `
          WEBSITE_NODE_DEFAULT_VERSION="~18.17.0"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "CampusERP"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: release.zip

      - name: Restart Web App
        shell: powershell
        run: |
          az webapp restart --name CampusERP --resource-group CampusERP_group

      - name: Logout from Azure
        run: az logout
        if: always()
